// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  username    String  @id @db.VarChar(100)
  password    String  @db.VarChar(100)
  name        String  @db.VarChar(100)
  token       String? @db.VarChar(100)
  contacts    Contact[]
  Gudang      Gudang[]
  Transaksi   Transaksi[]
  Customer    CustomerMasuk[]
  @@map("users")
}

model Contact {
  id         Int     @id @default(autoincrement())
  first_name String  @db.VarChar(100)
  last_name  String? @db.VarChar(100)
  email      String? @db.VarChar(100)
  phone      String? @db.VarChar(20)
  username   String  @db.VarChar(100)

  user      User      @relation(fields: [username], references: [username])
  addresses Address[]

  @@map("contacts")
}

model Address {
  id          Int     @id @default(autoincrement())
  street      String? @db.VarChar(255)
  city        String? @db.VarChar(100)
  province    String? @db.VarChar(100)
  country     String  @db.VarChar(100)
  postal_code String  @db.VarChar(10)
  contact_id  Int

  contact Contact @relation(fields: [contact_id], references: [id])

  @@map("addresses")
}


model CustomerMasuk {
  id            Int     @id @default(autoincrement())
  first_name    String  @db.VarChar(100)
  last_name     String? @db.VarChar(100)
  email         String? @db.VarChar(100)
  phone         String? @db.VarChar(20)
  panggilan     String  @db.VarChar(100)
  tanggallahir  String @db.VarChar(100)
  alamat        String @db.VarChar(100)
  kota          String @db.VarChar(100)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User      @relation(fields: [username_yangmasukin], references: [username])
  username_yangmasukin      String  @db.VarChar(100)
  // relasi
  JenisPerangkat JenisPerangkat[]
  @@map("customermasuk")
}

model JenisPerangkat {
  id               Int     @id @default(autoincrement())
  merk             String  @db.VarChar(100)
  nama_jenis       String? @db.VarChar(100)
  nama_alat        String? @db.VarChar(100)
  tahun_rilis      String? @db.VarChar(100)
  mulai_digunakan  String? @db.VarChar(20)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
//relasi
  customer_id  Int
  customer CustomerMasuk @relation(fields: [customer_id], references: [id])


   @@map("jenisperangkat")
}
model Service{
  id                 Int     @id @default(autoincrement())
  keluhan            String  @db.VarChar(10)
  mulai_ditangani    String? @db.VarChar(100)
  alat_darigudang    String   @db.VarChar(100)
  selesai_ditangani  DateTime @default(now())
  updatedAt          DateTime @updatedAt


  //relasi
  gudang             Gudang @relation(fields: [gudang_id], references: [id])
  gudang_id         Int
  transaksi          Transaksi[]
  @@map("service")
}

model Gudang{
  id               Int      @id @default(autoincrement())
  sparepart_masuk  String   @db.VarChar(100)
  Jumlah           String   @db.VarChar(100)
  merk             String   @db.VarChar(100)
  nama_sparepart   String   @db.VarChar(100)
  nama_jenis       String?  @db.VarChar(100)
  tahun_rilis      String?  @db.VarChar(100)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  //relasi
  service           Service[]
  pengambil_barang User     @relation(fields: [karyawan], references: [username])
  karyawan         String   @db.VarChar(100)
  @@map("gudang")
}

model Transaksi{
   id                Int        @id @default(autoincrement())
   total_pembayaraan String     @db.VarChar(100)
   status_pembayaran String     @db.VarChar(100)
   nama_pembayar     String?    @db.VarChar(100)
   keterangan        String?    @db.VarChar(100)
   createdAt        DateTime    @default(now())
   updatedAt        DateTime    @updatedAt

  //  relasi
   diterima_karyawan User       @relation(fields: [karyawan], references: [username])
   karyawan          String     @db.VarChar(100)
   service           Service    @relation(fields: [service_id], references: [id])
   service_id        Int  

   @@map("Transaksi")
}